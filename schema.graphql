### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Mutation {
  SoldProduct(Sold: Boolean!, id: Int!): Product!
  deleteProduct(id: Int!): Product!
  login(email: String!, password: String!): AuthPayload!
  post(Sold: Boolean!, country: String!, lifetime: String!, productName: String!): Product!
  signup(email: String!, name: String!, password: String!): AuthPayload!
  updateProduct(Sold: Boolean!, country: String!, id: Int!, lifetime: String!, productName: String!): Product!
}

type Product {
  Sold: Boolean!
  country: String!
  id: Int!
  lifetime: String!
  postedBy: User
  productName: String!
}

input ProductOrderByInput {
  country: Sort
  createdAt: Sort
  lifetime: Sort
  productName: Sort
}

type Query {
  feed(filter: String, orderBy: [ProductOrderByInput!], skip: Int, take: Int): [Product!]!
  product(id: Int!): [Product!]!
}

enum Sort {
  asc
  desc
}

type User {
  email: String!
  id: Int!
  name: String!
  products: [Product!]!
}
